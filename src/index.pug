doctype html
html(lang="en")
    head
        meta(charset="utf-8")
        meta(name="viewport" content="width=device-width, initial-scale=1")
        title Flash Chat
        link(rel="stylesheet" href="style.css")
    body(data-theme="dark" data-mode="irc")
        header
            h1 Flash Chat
            .controls
                button#theme-toggle 🌙
                button#mode-toggle IRC

        main#chat-container
            .messages(role="log" aria-live="polite" aria-label="Chat messages")

        footer
            form#message-form
                input#message-input(type="text" placeholder="Type message..." aria-label="Message input")
                button(type="submit") Send

        script.
            // Theme switching
            const themeToggle = document.getElementById('theme-toggle');
            const modeToggle = document.getElementById('mode-toggle');
            const body = document.body;

            themeToggle.addEventListener('click', () => {
                const current = body.dataset.theme;
                body.dataset.theme = current === 'dark' ? 'light' : 'dark';
                themeToggle.textContent = current === 'dark' ? '☀️' : '🌙';
            });

            modeToggle.addEventListener('click', () => {
                const current = body.dataset.mode;
                body.dataset.mode = current === 'irc' ? 'signal' : 'irc';
                modeToggle.textContent = current === 'irc' ? 'Signal' : 'IRC';
            });

            // Message handling
            const form = document.getElementById('message-form');
            const input = document.getElementById('message-input');
            const messages = document.querySelector('.messages');

            form.addEventListener('submit', (e) => {
                e.preventDefault();
                const text = input.value.trim();
                if (!text) return;

                addMessage(text);
                input.value = '';
            });

            function addMessage(text) {
                const timestamp = Date.now();
                const message = { text, timestamp };

                // Store in localStorage
                localStorage.setItem(`msg_${timestamp}`, JSON.stringify(message));

                // Render message
                renderMessage(message);
            }

            function renderMessage(message) {
                const div = document.createElement('div');
                div.className = 'message';

                const time = new Date(message.timestamp).toLocaleTimeString([], {
                    hour: '2-digit',
                    minute: '2-digit'
                });

                if (document.body.dataset.mode === 'irc') {
                    div.innerHTML = `<span class="timestamp">[${time}]</span> <span class="text">${message.text}</span>`;
                } else {
                    div.innerHTML = `<div class="bubble"><span class="text">${message.text}</span><span class="time">${time}</span></div>`;
                }

                messages.appendChild(div);
                messages.scrollTop = messages.scrollHeight;
            }

            // Load messages on startup
            Object.keys(localStorage)
                .filter(key => key.startsWith('msg_'))
                .sort()
                .forEach(key => {
                    const message = JSON.parse(localStorage.getItem(key));
                    renderMessage(message);
                });